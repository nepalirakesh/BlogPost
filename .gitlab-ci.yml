stages:
  - build
  - push
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_REGISTRY: 599108698428.dkr.ecr.ap-south-1.amazonaws.com
  REPOSITORY_NAME: dummy-repository
  APP_VERSION: $CI_PIPELINE_IID

build image and push to ecr:
  stage: build
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  services:
    - name: docker:dind
  script:
    - docker build -t $DOCKER_REGISTRY/$REPOSITORY_NAME:$APP_VERSION ./docker
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - docker push $DOCKER_REGISTRY/$REPOSITORY_NAME:$APP_VERSION
# 1) ssh into ec2 instance.
# 2) fetch image from amazon ecr to ec2 instance.
# 3) fetch gitlab repository to ec2 instance.
# 4) deploy the application
# deploy image:
#   stage: deploy
#   image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
#   services:
#     - name: docker:dind
#   script:
#     - apt install -y openssh-client
#     - eval $(ssh-agent -s)
#     - echo "$EC2_SSH_PRIVATE_KEY" | ssh-add -
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - |
#       ssh -o StrictHostKeyChecking=no ec2-user@43.204.23.164 "
#       sudo yum update
#       sudo yum install -y git docker
#       sudo systemctl start docker
#       export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
#       aws ecr get-login-password --region $AWS_DEFAULT_REGION | sudo docker login --username AWS --password-stdin
#       sudo docker pull $DOCKER_REGISTRY/$REPOSITORY_NAME:$APP_VERSION
#       "
deploy image:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  services:
    - name: docker:dind
  script:
    - apt install -y openssh-client
    - eval $(ssh-agent -s)
    - echo "$EC2_SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh -o StrictHostKeyChecking=no ec2-user@43.204.23.164 "ssh -T git@gitlab.com"
